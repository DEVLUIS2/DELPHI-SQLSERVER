unit FILRELCLIENTE;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, ExtCtrls, Mask, rxToolEdit, ComCtrls, DateUtils;

type
  TTFRCliente = class(TForm)
    pnl1: TPanel;
    pnl2: TPanel;
    btnCancelar: TBitBtn;
    btnRelatorio: TBitBtn;
    rg1: TRadioGroup;
    rg2: TRadioGroup;
    RadioGroup1: TRadioGroup;
    GroupBox1: TGroupBox;
    Label5: TLabel;
    Label1: TLabel;
    btnPesquisaCliente: TBitBtn;
    btnLimpaCliente: TBitBtn;
    edCodCliente: TEdit;
    edNomeCliente: TEdit;
    procedure btnCancelarClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure btnRelatorioClick(Sender: TObject);
    procedure RadioGroup1Click(Sender: TObject);
    procedure edCodClienteKeyPress(Sender: TObject; var Key: Char);
    procedure edCodClienteKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btnLimpaClienteClick(Sender: TObject);
    procedure btnPesquisaClienteClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure chamaTela;
  end;

var
  TFRCliente: TTFRCliente;

implementation

uses
  RELCLIENTE, Funcoes, DMPRINCIPAL, CLIENTE;

{$R *.dfm}

{ TForm1 }

procedure TTFRCliente.btnCancelarClick(Sender: TObject);
begin
  Close;
end;

procedure TTFRCliente.btnLimpaClienteClick(Sender: TObject);
begin
  edCodCliente.ReadOnly := False;
  edCodCliente.Clear;
  edNomeCliente.Clear;
  btnPesquisaCliente.Enabled := True;
  btnLimpaCliente.Enabled := False;
end;

procedure TTFRCliente.btnPesquisaClienteClick(Sender: TObject);
  var CodigoCliente:Integer;
begin
  CodigoCliente := StrToInt(TCliente.transferecliente);
  if CodigoCliente > 0 then
  begin
    with TDMPrincipal.qGeneric do
    begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT COD_CLI,NOME_CLI');
      SQL.Add('FROM CLIENTE');
      SQL.Add('WHERE COD_CLI = '+IntToStr(CodigoCliente));
      Open;
      if not IsEmpty then
      begin
        edCodCliente.Text := FieldByName('COD_CLI').AsString;
        edNomeCliente.Text := FieldByName('NOME_CLI').AsString;
        btnPesquisaCliente.Enabled := False;
        edCodCliente.ReadOnly := True;
        btnLimpaCliente.Enabled := True;
        if btnRelatorio.CanFocus then
          btnRelatorio.SetFocus;
      end;
    end;
  end;
end;

procedure TTFRCliente.btnRelatorioClick(Sender: TObject);
begin
  if Empty(edNomeCliente.Text) then
    TRCliente.ChamaTela(rg2.ItemIndex,rg1.ItemIndex,RadioGroup1.ItemIndex,0)
  else
    TRCliente.ChamaTela(rg2.ItemIndex,rg1.ItemIndex,RadioGroup1.ItemIndex,StrToInt(edCodCliente.Text));
end;
procedure TTFRCliente.chamaTela;
begin
  TFRCliente:=TTFRCliente.Create(application);
  with TFRCliente do
  begin
    ShowModal;
    FreeAndNil(TFRCliente);
  end;
end;



procedure TTFRCliente.edCodClienteKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  case key of
    VK_F3:
      if (btnPesquisaCliente.Visible) and (btnPesquisaCliente.Enabled) then
        btnPesquisaCliente.Click;
  end;
end;

procedure TTFRCliente.edCodClienteKeyPress(Sender: TObject; var Key: Char);
begin
  if not (key in[#13,#48..#57,#8]) then
    key := #0;
  if (key = #13) and not (Empty(edCodCliente.Text)) then
  begin
    with TDMPrincipal.qGeneric do
    begin
      Close;
      SQL.Clear;
      SQL.Add('SELECT COD_CLI,NOME_CLI');
      SQL.Add('FROM CLIENTE');
      SQL.Add('WHERE COD_CLI = ' +edCodCliente.Text);
      OPen;
      if not IsEmpty then
      begin
        edCodCliente.Text := FieldByName('COD_CLI').AsString;
        edNomeCliente.Text := FieldByName('NOME_CLI').AsString;
        edCodCliente.ReadOnly := True;
        btnLimpaCliente.Enabled := True;
        btnPesquisaCliente.Enabled := False;
        if btnRelatorio.CanFocus then
          btnRelatorio.SetFocus;
      end;
    end;
  end;
end;

procedure TTFRCliente.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  case key of
    VK_ESCAPE:
    if (btnCancelar.Visible) and (btnCancelar.Enabled) then
      btnCancelar.Click;
    VK_F5:
    if (btnRelatorio.Visible) and (btnRelatorio.Enabled) then
      btnRelatorio.Click;
  end;
end;
procedure TTFRCliente.RadioGroup1Click(Sender: TObject);
begin
  if RadioGroup1.ItemIndex = 1 then
  begin
    rg1.Enabled := False;
    rg2.Enabled := False;
  end
  else
  begin
    rg1.Enabled := True;
    rg2.Enabled := True;
  end;

end;

end.
